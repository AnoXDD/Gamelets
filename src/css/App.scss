$font: "Lato";

@import "base";
@import url(https://fonts.googleapis.com/css?family=#{$font}:400,700,900);

$screen-break: 510px;
$rollback: cubic-bezier(0.18, 0.88, 0.32, 1.28);
$rollback-heavy: cubic-bezier(0.18, 0.88, 0.65, 1.5);
$scrabble-marathon-level-limit: 4;

*:not(i) {
  font-family: $font, sans-serif;
}

body, html {
  width: 100vw;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

#root, .App, .game-select, .game-list {
  width: 100%;
  height: 100%;
}

@keyframes fade-in-up {
  0% {
    top: 0;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}

.letter-enter {
  transform: scale(.3);
  opacity: 0;
  max-width: 0;

  &.letter-enter-active {
    opacity: 1;
    transform: scale(1);
    max-width: 30px;
    transition: .2s ease;
  }
}

.letter-exit {
  transform: scale(1);
  opacity: 1;
  max-width: 30px;

  &.letter-exit-active {
    transform: scale(.5);
    opacity: 0;
    max-width: 0;
    transition: .2s ease;
  }
}

.btn.top {
  position: absolute;
  top: 0;
  color: white;
  background: transparent;
  z-index: 5;
  height: 80px;

  &.top-left {
    opacity: 0;
  }

  &.top-right {
    right: 0;
  }

  &.back {
    pointer-events: none;

    .in-game & {
      opacity: 1;
      pointer-events: auto;
    }
  }

  &.full-screen {
    .in-game & {
      opacity: 0;
      pointer-events: none;
    }
  }

  &:hover {
    color: white;
    background: rgba(0, 0, 0, .1);
  }
}

.full-screen-cover {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 5000;

  background: $darkgrey;
}

.screen-size-warning {
  box-sizing: border-box;
  color: $lightgrey;
  padding: 20px;

  .title {
    font-size: 25px;
  }

  .diagnosis {
    .failed {
      color: $red;
    }
  }
}

.game-select {
  background: linear-gradient(to bottom right, $blue 0%, $blue-hover 100%);

  .game-list, .game-real {
    position: absolute;
    top: 0;
    transition: .2s ease;
    height: 100%;
    width: 100%;
  }

  .game-real {
    left: 100vw;
  }

  .game-list {
    position: relative;
    flex-direction: column;
    right: 0;

    .games-wrapper {
      position: relative;
      flex-grow: 1;
      width: 100%;
      padding: 0 10%;
      box-shadow: inset 0 0 20px grey;
      background: #fff;
    }

    .games {
    }

    .app-title, .title, .game, .category {
      position: relative;
      width: 450px;
      height: 80px;
      color: white;
      text-transform: uppercase;
      font-weight: bolder;
      font-size: 30px;
      margin: 10px auto;
      transition: .4s ease;
    }

    .app-title {
      line-height: 80px;
      margin: 0;
    }

    .category {
      border: none;
      color: $darkgrey-l;
      font-weight: 900;
      height: 60px;
      display: flex;
      padding: 10px 0;

      .category-inner, .icon-wrapper {
        align-self: center;
      }

      .icon-wrapper {
        margin: 0 15px 0 10px;
      }

      .material-icons {
        display: block;
      }
    }

    .title {
      border: none;
      font-size: 35px;
    }

    .author-wrapper {
      text-align: right;
      width: 100%;

      .author {
        padding: 5px;
        font-size: 10px;
        line-height: 20px;

        &:visited {
          color: white;
        }
      }
    }

    .game {
      cursor: pointer;
      color: black;
      box-shadow: 2px 2px 10px lightgrey;
      text-transform: none;

      &:hover {
        background: white;
        color: $cp;
      }

      &:before {
        content: "";
        background: $blue;
        position: absolute;
        left: 0;
        top: 0;
        width: 8px;
        height: 100%;
      }
    }

    @media screen and (max-width: $screen-break) {

      .title, .game, .category {
        box-sizing: border-box;
        width: 80vw;
        font-size: 18px;
        margin: 5px auto;
      }

      .app-title {
        margin: 0;
      }

      .title {
        font-size: 35px;
      }

      .game {
        height: 60px;
        box-shadow: 1px 1px 5px lightgrey;
      }

      .material-icons {
        font-size: 20px;
      }
    }
  }

  &.in-game {
    .game-real {
      left: 0;
    }

    .game-list {
      right: 100vw;
    }
  }
}

.game {
  @keyframes wrong {
    50% {
      background: $red;
    }
  }

  @keyframes correct {
    50% {
      background: $green;
    }
  }

  @keyframes repeated {
    50% {
      background: $amber;
    }
  }

  @keyframes amber-bg {
    20%, 80% {
      background: $amber;
    }
  }

  @keyframes shaking {
    10%, 40%, 70% {
      transform: translateX(5px);
      opacity: 1;
    }

    25%, 55%, 85% {
      transform: translateX(-5px);
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }

  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  user-select: none;

  header {
    width: 100%;
    text-align: right;
    background: $blue;
    height: 80px;
    color: white;
    font-size: 24px;
    transition: .4s ease;
    box-shadow: 0 0 20px grey;
    z-index: 1;

    > .restart {
      position: fixed;
      right: 0;
      top: 0;
      padding: 0;
      background: transparent;
      color: white;
    }

    @media screen and (max-width: $screen-break) {
      font-size: 20px;
    }
  }

  .game-intro {
    max-width: 700px;
    text-align: left;
    box-sizing: border-box;
    padding: 20px;

    @media screen and (max-width: $screen-break) {
      padding: 20px 40px 20px 60px;
    }
  }

  .game-area {
    overflow: hidden;
    flex: 1 1 auto;
    position: relative;
    background: white;

    .game-area-inner {
      flex-direction: column;
      padding-bottom: 20px;
      box-sizing: border-box;
    }
  }

  &.idle, &.ready {
    header {
      flex-direction: column;
      height: 100%;
    }

    .grid {
      pointer-events: none;
    }
  }

  &.idle {
    .timer {
      position: absolute;
      width: 0;
      margin: 0;
    }
  }

  &.ready {
    .timer {
      position: absolute;
      margin: 0;
      font-size: 100px;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;

      &:before {
        content: "";
      }
    }

    .btns {
      left: 100vw;
    }

    .score {
      opacity: 0;
    }
  }

  .btn {
    background: #fff;
    color: $css;
    font-size: 20px;
    padding: 10px 20px;
  }

  .btns {
    position: relative;
    left: 0;
    transition: 1s ease;

    &.replay {
      margin-top: 50px;
    }
  }

  @at-root .letter-selected {
    width: 500px;
    height: 100px;
    background: $css;
    color: white;
    text-transform: uppercase;
    font-size: 40px;
    font-weight: bolder;
    margin-bottom: 10px;
    transition: .2s ease;
    position: relative;

    .wrong & {
      animation: wrong .3s ease;
    }

    .repeated & {
      animation: repeated .3s ease;
    }

    .shaking & {
      animation: amber-bg 2s ease;

      .letter {
        animation: shaking 2s ease;
      }
    }

    .correct & {
      animation: correct .3s ease;
    }

    .letter {
      display: inline-block;
      overflow: hidden;
    }
  }
}

.wordlink {
  &.not-valid {
    .letter-selected {
      background-color: $red;
    }
    .grid .selected {
      .letter-inner:before, .l, .lu, .u, .ru, .r, .rd, .d, .ld {
        background-color: $red;
      }
    }
  }
  &.valid {
    .letter-selected {
      background-color: $green;
    }
    .grid .selected {
      .letter-inner:before, .l, .lu, .u, .ru, .r, .rd, .d, .ld {
        background-color: $green;
      }
    }
  }

  @media screen and (max-width: $screen-break) {

    .letter-selected {
      height: 70px;
      font-size: 25px;
      width: 80%;
    }

    .grid {
      $grid-size: 60px;

      height: 5 * $grid-size;

      .grid-wrapper {
        width: 5 * $grid-size;
        height: 5 * $grid-size;
      }

      .letter-grid {
        width: $grid-size;
        height: $grid-size;
        font-size: 12px;
        padding: 0;

        .arrow {
          height: 4%;
          top: 48%;
        }

        &:after {
          right: 5px;
          bottom: 5px;
        }
      }

      .letter-inner {
        font-size: 30px;

        &:before {
          width: $grid-size - 5px;
          height: $grid-size - 5px;
        }
      }
    }
  }

}

$grid-size: 100px;

.grid {
  @keyframes grid-enter {
    from {
      margin-bottom: 100%;
    }

    to {
      margin-bottom: 0;
    }
  }

  .letter-prompt &, .scrabble-marathon &, .word-chain & {
    height: 3 * $grid-size;
    overflow: visible;

    .grid-wrapper {
      width: 3 * $grid-size;
      height: 3 * $grid-size;
      z-index: 5;
    }

    .letter-grid {
      pointer-events: auto;
      animation: none;
      transition: top .2s $rollback, left .2s $rollback, opacity .4s ease;
      top: 0;
      left: 0;

      &.letter-0 {
        opacity: 0;
        pointer-events: none;

        &:after {
          content: "0";
        }

        &.letter-in-use {
          opacity: .2;
        }
      }

      &.no-badge:after {
        display: none;
      }
    }

    @for $i from 0 through 2 {
      @for $j from 0 through 2 {
        .letter-position-3-3-#{3*$i+$j} {
          top: $i * $grid-size;
          left: $j * $grid-size;
        }
      }
    }

    .letter-inner {
      color: white;

      &:before {
        background-color: $darkgrey;
      }
    }
  }

  width: 100%;
  height: 5 * $grid-size;
  position: relative;
  overflow: hidden;
  user-select: none;

  .grid-wrapper {
    width: 5 * $grid-size;
    height: 5 * $grid-size;
    position: relative;
  }

  .letter-grid {
    position: absolute;
    box-sizing: border-box;
    width: $grid-size;
    height: $grid-size;
    transition: .4s ease;
    animation: grid-enter .4s ease;
    pointer-events: none;

    .arrow {
      display: block;
      content: "";
      background-color: transparent;
      z-index: 0;
      width: 100%;
      height: 8%;
      position: absolute;
      right: 50%;
      top: 46%;
      transform-origin: 100% 50%;

      &.l, &.lu, &.u, &.ru, &.r, &.rd, &.d, &.ld {
        background: $css;
        transition: background .2s ease;
      }

      &.lu {
        transform: rotate(45deg);
      }
      &.u {
        transform: rotate(90deg);
      }
      &.ru {
        transform: rotate(135deg);
      }
      &.r {
        transform: rotate(180deg);
      }
      &.rd {
        transform: rotate(225deg);
      }
      &.d {
        transform: rotate(-90deg);
      }
      &.ld {
        transform: rotate(-45deg);
      }
    }

    &:after {
      content: "1";
      color: white;
      z-index: 1;
      position: absolute;
      right: 10px;
      bottom: 10px;
      font-weight: bold;
      pointer-events: none;
      animation: test .4s ease;
    }

    $point-2: ("l", "n", "r", 't', 'u', '2');
    $point-3: ('d', 'g', '3');
    $point-4: ('b', 'c', '4');
    $point-5: ('f', 'h', 'v', '5');
    $point-6: ('k', 'w', '6');
    $point-7: ('7');
    $point-8: ('x', 'j', '8');
    $point-9: ('9');
    $point-10: ('z', 'q', '10');

    @keyframes test {
      from {
        bottom: 50px;
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }
    @keyframes test-2 {
      from {
        bottom: 50px;
        opacity: 0;
      }

      to {
        opacity: 1;
      }
    }

    @each $i in $point-2 {
      &.letter-#{$i}:after {
        content: "2";
        animation: test-2 .4s ease;
      }
    }
    @each $i in $point-3 {
      &.letter-#{$i}:after {
        content: "3";
      }
    }
    @each $i in $point-4 {
      &.letter-#{$i}:after {
        content: "4";
        animation: test-2 .4s ease;
      }
    }
    @each $i in $point-5 {
      &.letter-#{$i}:after {
        content: "5";
      }
    }
    @each $i in $point-6 {
      &.letter-#{$i}:after {
        content: "6";
        animation: test-2 .4s ease;
      }
    }
    @each $i in $point-7 {
      &.letter-#{$i}:after {
        content: "7";
      }
    }
    @each $i in $point-8 {
      &.letter-#{$i}:after {
        content: "8";
        animation: test-2 .4s ease;
      }
    }
    @each $i in $point-9 {
      &.letter-#{$i}:after {
        content: "9";
      }
    }
    @each $i in $point-10 {
      &.letter-#{$i}:after {
        content: "10";
        animation: test-2 .4s ease;
      }
    }

    &.hover, &:active {
      :before {
        transform: scale(.95);
        background-color: $csl;
      }
    }

    &.selected {
      :before {
        background-color: $css;
      }
    }
  }

  .letter-inner {
    width: 100%;
    height: 100%;
    font-size: 45px;
    font-weight: bold;
    text-transform: uppercase;
    color: white;
    position: relative;
    z-index: 1;

    &:before {
      content: "";
      background-color: $lightgrey;
      width: $grid-size - 5px;
      height: $grid-size - 5px;
      position: absolute;
      left: 2.5px;
      top: 2.5px;
      transition: .2s ease;
      pointer-events: none;
    }

    span {
      position: relative;
      pointer-events: none;
      z-index: 1;
    }
  }
}

.score {
  @keyframes fade-in-up-1 {
    from {
      bottom: -30px;
      opacity: 1;
    }

    to {
      bottom: 0px;
      opacity: 0;
    }
  }

  @keyframes fade-in-up-2 {
    from {
      bottom: -30px;
      opacity: 1;
    }

    to {
      bottom: 0px;
      opacity: 0;
    }
  }

  position: relative;

  &:before {
    content: "SCORE: ";
  }

  .difference-1 {
    animation: fade-in-up-1 2s ease;
  }
  .difference-2 {
    animation: fade-in-up-2 2s ease;
  }

  .difference {
    position: absolute;
    color: $amber;
    right: 0;
    bottom: 0;
    opacity: 0;

    &:before {
      content: "+";

    }
  }
}

.timer {
  margin-right: 50px;
  transition: .4s ease;
  overflow: hidden;

  &:before {
    content: 'TIME:\00a0';
  }
}

.letter-prompt, .scrabble-marathon, .word-chain {
  .game-area-inner {
    flex-direction: column;
  }

  header {
    .prompt {
      text-transform: uppercase;
    }

    // To get it work, set animation time to be .7s
    @keyframes word-appear-delay-half-s {
      0%, 71.4% {
        transform: scale(0);
      }
    }

    // To get it work, set animation time to be 1.2s
    @keyframes word-appear-delay-1s {
      0%, 83.3% {
        transform: scale(0);
      }
    }

    .word {
      position: absolute;
      top: 50px;
      font-size: 40px;
      animation: word-appear-delay-half-s .7s $rollback-heavy;
    }

    .word-list {
      max-width: 80vw;
      margin-top: 50px;
      font-size: 20px;
      flex: none;
      font-weight: lighter;
      animation: word-appear-delay-1s 1.2s $rollback-heavy;
    }
  }

  .word-list {
    height: auto;
    font-size: 30px;
    text-transform: uppercase;
    font-weight: bold;
    max-width: $screen-break;
    text-align: center;
    flex-wrap: wrap;

    @keyframes word-appear {
      from {
        transform: scale(.3);
      }
    }

    .word {
      padding: 0 20px;
      display: inline-block;
      animation: word-appear .2s $rollback-heavy;

      &.empty {
        letter-spacing: 5px;
        animation: none;
      }
    }
  }

  @media screen and (max-width: $screen-break) {

    .word-list {
      font-size: 25px;
    }

    .letter-selected {
      height: 70px;
      font-size: 25px;
      width: 80%;
    }

    .scrabble-marathon, .word-chain {
      $grid-size: 40px;

      .grid {
        height: $grid-size;

        .grid-wrapper {
          width: 500px;
          height: $grid-size;
          display: flex;
          justify-content: center;
          transition: .4s ease;

          @for $i from 0 through $scrabble-marathon-level-limit {
            &.level-#{$i} {
              width: $grid-size * ($i + 4);
            }
          }
        }

        .letter-grid {
          height: $grid-size;
          width: $grid-size;

          &.letter-in-use {
            opacity: .2;
            pointer-events: none;
          }

          .letter-inner {
            font-size: 30px;

            &:before {
              width: $grid-size - 5px;
              height: $grid-size - 5px;
            }
          }

          @for $i from 0 through 7 {
            &.letter-pos-#{$i} {
              top: 0;
              left: $i * $grid-size;
            }
          }
        }
      }
    }

    .grid {
      $grid-size: 60px;

      height: 3 * $grid-size;

      .grid-wrapper {
        width: 3 * $grid-size;
        height: 3 * $grid-size;
      }

      .letter-grid {
        width: $grid-size;
        height: $grid-size;
        font-size: 12px;

        .arrow {
          height: 4%;
          top: 48%;
        }

        &:after {
          right: 5px;
          bottom: 5px;
        }
      }

      @for $i from 0 through 2 {
        @for $j from 0 through 2 {
          .letter-position-3-3-#{3*$i+$j} {
            top: $i * $grid-size;
            left: $j * $grid-size;
          }
        }
      }

      .letter-inner {
        font-size: 30px;

        &:before {
          width: $grid-size - 5px;
          height: $grid-size - 5px;
        }
      }
    }
  }
}

.flex-bubble-wrap {
  flex: 1 1 auto;
}

.scrabble-marathon, .word-chain {
  $grid-size: 70px;

  .grid {
    height: $grid-size;

    .grid-wrapper {
      width: 500px;
      height: $grid-size;
      display: flex;
      justify-content: center;
      transition: .4s ease;

      @for $i from 0 through $scrabble-marathon-level-limit {
        &.level-#{$i} {
          width: $grid-size * ($i + 4);
        }
      }
    }

    .letter-grid {
      height: $grid-size;
      width: $grid-size;

      &.letter-in-use {
        opacity: .2;
        pointer-events: none;
      }

      .letter-inner {
        font-size: 30px;

        &:before {
          width: $grid-size - 5px;
          height: $grid-size - 5px;
        }
      }

      @for $i from 0 through 7 {
        &.letter-pos-#{$i} {
          top: 0;
          left: $i * $grid-size;
        }
      }
    }
  }

  //.word-list-wrapper {
  //  height: 40vh;
  //  position: relative;
  //  width: 100%;
  //
  //  .word-list {
  //    max-height: 100%;
  //    box-sizing: border-box;
  //    padding: 20px 0;
  //    overflow: auto;
  //  }
  //}
  //

  .word-list-wrapper {
    display: flex;
    height: 40vh;

    .word-list {
      padding: 0;
      overflow: hidden;
      margin-top: auto;

      .word {
        display: block;
      }
    }
  }

  .progress {
    width: 400px;
    height: 5px;
    padding: 10px 0;
    position: relative;

    .progress-bubble {
      height: 5px;
      background-color: $bg-grey;
      box-sizing: border-box;
      border-right: 1px solid white;
    }

    .progress-bar {
      position: absolute;
      background-color: $blue;
      width: 0;
      height: 5px;
      left: 0;
      transition: .4s ease;
    }
  }

  .btns {
    margin-top: 10px;
  }

  @media screen and (max-width: $screen-break) {
    $grid-size: 40px;

    .progress {
      width: 80vw;
    }

    .grid {
      height: $grid-size;

      .grid-wrapper {
        width: 500px;
        height: $grid-size;
        display: flex;
        justify-content: center;
        transition: .4s ease;

        @for $i from 0 through $scrabble-marathon-level-limit {
          &.level-#{$i} {
            width: $grid-size * ($i + 4);
          }
        }
      }

      .letter-grid {
        height: $grid-size;
        width: $grid-size;

        &.letter-in-use {
          opacity: .2;
          pointer-events: none;
        }

        .letter-inner {
          font-size: 20px;

          &:before {
            width: $grid-size - 2px;
            height: $grid-size - 2px;
            left: 1px;
            top: 1px;
          }
        }

        @for $i from 0 through 7 {
          &.letter-pos-#{$i} {
            top: 0;
            left: $i * $grid-size;
          }
        }
      }
    }
  }
}

.word-chain {
  .letter.perishing {
    animation: fade-out 10.5s linear;
  }

  .grid .letter-grid {
    animation: fade-in .4s ease;
  }

  .flash-word {
    opacity: 0;
    top: -50px;
    position: absolute;
    animation: fade-in-up 3s ease;
    color: $amber;
  }
}

.sokoban-infinite {
  .game-area .game-area-inner {
    padding-bottom: 0;
  }

  .grid-area {
    padding: 100px;
    position: relative;
  }

  .grid-wrapper {
    position: relative;
    box-shadow: 0 0 100px grey;
    overflow: hidden;
  }

  &.game-over:not(.blurred) {
    .prompt {
      color: $red;
    }
  }

  &.blurred {
    .non-player-wrapper {
      filter: blur(3px);
    }

    .player-wrapper {
      filter: blur(2px);
    }
  }

  .non-player-wrapper, .player-wrapper {
    transition: filter .4s linear;
  }

  .grid-gradient-cover {
    background: linear-gradient(to bottom right, $blue-light 0%, $blue 100%);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
  }

  .border {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    &:after {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: white;
      content: " ";
    }

    &.vertical:after {
      left: -2px;
      width: 4px;
    }

    &.horizontal:after {
      top: -2px;
      height: 4px;
    }
  }

  .virtual-control {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    flex-direction: row;
    z-index: 10;
    background: white;
    opacity: .5;
    transition: opacity 4s ease;
    display: none;

    &.transparent {
      opacity: 0;
      pointer-events: auto !important;
    }

    .control {
      height: 100%;
      flex-grow: 2;

      &.up-down {
        .btn {
          height: 50%;
          width: 100%;
        }
      }
    }

    .btn {
      height: 100%;
      padding: 0;
      flex-grow: 1;
    }
  }

  .cell {
    width: 30px;
    height: 30px;
    position: absolute;
    transition: top .1s ease, left .1s ease, filter .8s ease;
    box-sizing: border-box;
    background: #fff;

    &.box {
      background: linear-gradient(to bottom right, $lightgreen, $green);
      filter: grayscale(100%);
      margin: 3px;
      width: 24px;
      height: 24px;

      &.completed {
        filter: none;

        &:before, &:after {
          border: 2px solid white;
          left: 25%;
          top: 25%;
          content: ' ';
          height: 50%;
          width: 50%;
          background: transparent;
          border-radius: 50px;
        }
      }

      &:before, &:after {
        position: absolute;
        top: 25%;
        left: 45%;
        content: ' ';
        height: 50%;
        width: 10%;
        transition: .4s ease;
        background-color: white;
        box-sizing: border-box;
      }

      &:before {
        transform: rotate(45deg);
      }

      &:after {
        transform: rotate(-45deg);
      }
    }

    &.wall {
      background: transparent;
    }

    &.player {
      background: transparent;
      &:after {
        position: absolute;
        top: 30%;
        left: 30%;
        content: ' ';
        height: 40%;
        width: 40%;
        background-color: black;
        z-index: 1;
        transform: rotate(45deg);
      }
    }

    &.goal {
      background: white;

      &:after {
        position: absolute;
        top: 35%;
        left: 35%;
        content: ' ';
        height: 30%;
        width: 30%;
        border-radius: 50%;
        background-color: lightgrey;
      }
    }
  }

  @media screen and (max-width: $screen-break) {
    .virtual-control {
      display: flex;
    }
  }
}

.bubble-burst {
  .game-area .game-area-inner {
    padding-bottom: 0;
  }

  .bubble-canvas {
    @keyframes fade-out {
      from {
        opacity: 1;
      }

      to {
        opacity: 0;
      }
    }

    position: relative;
    box-shadow: 0 0 100px grey;
    overflow: hidden;

    .bubble {
      border-radius: 50px;
      position: absolute;
      transition: none;
      pointer-events: none;

      .score {
        font-size: 12px;

        &:before {
          content: "+";
        }
      }
    }

    .new-bubble {
      position: absolute;
      pointer-events: none;

      &:before {
        content: "NEW";
        font-size: 10px;
        animation: fade-out 1s ease;
        opacity: 0;
      }
    }
  }

  .attempts {
    width: 100%;
    text-align: center;

    .bubble {
      display: inline-block;
      margin: 20px 10px;
      width: 5px;
      height: 5px;
      border-radius: 50px;
      background: #000;
      opacity: 1;
      transition: opacity 2.5s ease;

      &.used {
        opacity: 0;
      }
    }
  }
}